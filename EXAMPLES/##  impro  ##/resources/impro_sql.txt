create database impro;

use impro;

create table status
(
status_id int  not null auto_increment primary key,
status varchar(15)  not null 
);

insert into status (status) values ('Active'),('Inactive'),('Blocked'),('Closed');

create table states
(
state_id int  not null auto_increment primary key,
state_name varchar(100)  not null 
);


create table days
(
day_id int  not null auto_increment primary key,
day varchar(12)  
);


create table categories
(
category_id int  not null auto_increment primary key,
category varchar(25)  not null 
);

create table cities
(
city_id int  not null auto_increment primary key,
city_name varchar(60) not null,
state_id int not null,
constraint fk_cities_states foreign key (state_id) references states (state_id)
);

create table institutes(

institute_id int  not null auto_increment primary key,
institute_name varchar(100)  not null unique ,
address varchar(100) not null ,
city_id int not null,
constraint fk_institutes_cities foreign key (city_id) references cities (city_id) ,
status_id int not null,
constraint fk_institutes_status foreign key (status_id) references status (status_id),
email varchar(50) not null unique,
contact varchar(20) not null unique,
password varchar(50) not null,
about_us varchar(500)  not null
);

alter table institutes change column status_id status_id int not null default 2;
alter table institutes change column contact contact varchar(20) null unique;
alter table institutes change column about_us about_us varchar(3500) null;
alter table institutes add column vfcode varchar(100) not null;
alter table institutes add column inst_dp varchar(50);

create table courses
(
course_id int  not null auto_increment primary key,
course_name varchar(45)  not null,
course_details varchar(5000) not null,
category_id int not null,
constraint fk_courses_categories foreign key (category_id) references categories (category_id)
);

create table topics
(
topic_id int  not null auto_increment primary key,
topic_name varchar(45)  not null,
course_id int not null,
constraint fk_topics_courses foreign key (course_id) references courses (course_id)
);


create table institute_courses
(
institute_course_id int  not null auto_increment primary key,
institute_id int not null,
constraint fk_ic_institutes foreign key (institute_id) references institutes (institute_id),
course_id int not null,
constraint fk_ic_courses foreign key (course_id) references courses (course_id)
);


create table institute_course_batches
(
institute_course_batch_id int  not null auto_increment primary key,
institute_course_id int not null,
constraint fk_icb_institute_courses foreign key (institute_course_id) references institute_courses (institute_course_id),
batch_name varchar(25) not null,
fees int not null
);


create table institute_categories
(
institute_category_id int  not null auto_increment primary key,
institute_id int not null,
constraint fk_icat_institutes foreign key (institute_id) references institutes (institute_id),
category_id int not null,
constraint fk_icat_categories foreign key (category_id) references categories (category_id)
);
create table institute_pics(
institute_pic_id int  not null auto_increment primary key,
institute_id int not null,
constraint fk_ipics_institutes foreign key (institute_id) references institutes (institute_id),
pic_path varchar(120) not null,
details varchar(500) not null
);

create table institute_course_batch_timings
(
institute_course_batch_timing_id int  not null auto_increment primary key,
institute_course_batch_id int not null,
constraint fk_icbt_institutes foreign key (institute_course_batch_id) references institute_course_batches (institute_course_batch_id),
start_time Time not null,
end_time Time not null,
status_id int not null,
constraint fk_icbt_status foreign key (status_id) references status (status_id),
start_date Date not null,
end_date Date not null,
fees int not null
);
create table institute_course_batch_timing_days
(
institute_course_batch_timing_day_id  int  not null auto_increment primary key,

institute_course_batch_timing_id int not null,
constraint fk_icbtd_icbt foreign key (institute_course_batch_timing_id) references institute_course_batch_timings (institute_course_batch_timing_id),
day_id int not null

);

create table students
(
student_id int  not null auto_increment primary key,
student_name varchar(30) not null,
dob Date not null,
address varchar(500),
contact varchar(20),
city_id int not null,
constraint fk_students_cities foreign key (city_id) references cities (city_id) ,
email varchar(60) unique,
password varchar(100),
status_id int not null,
constraint fk_students_status foreign key (status_id) references status (status_id),
gender varchar(1) not null

);


create table institute_course_batch_timing_student(
institute_course_batch_timing_student_id int  not null auto_increment primary key,

institute_course_batch_timing_id int not null,
constraint fk_icbts_icbt foreign key (institute_course_batch_timing_id) references institute_course_batch_timings (institute_course_batch_timing_id),

student_id int not null,
constraint fk_icbts_students foreign key (student_id) references students (student_id) ,

fees_due int not null
);
create table student_fees
(
student_fees_id int  not null auto_increment primary key,
institute_course_batch_timing_student_id int not null,
constraint fk_sf_icbts foreign key (institute_course_batch_timing_student_id) references institute_course_batch_timing_student (institute_course_batch_timing_student_id),

fees_amount int not null,
fees_date Date not null,
payment_mode Boolean not null,
transactionid varchar(30),
transaction_status varchar(20) 


);

create table faculties(
faculty_id int  not null auto_increment primary key,
faculty_name varchar(60) not null,
address varchar(500) not null,
city_id int not null,
constraint fk_faculties_cities foreign key (city_id) references cities (city_id) ,
contact varchar(20) not null,
email varchar(60) not null unique,
salary int not null,
experience int not null,
dob Date not null,
gender varchar(1) not null,
status_id int not null,
constraint fk_faculties_status foreign key (status_id) references status (status_id)

);

create table faculty_courses
(
Faculty_course_id  int  not null auto_increment primary key,
faculty_id int not null,
constraint fk_fc_status foreign key (faculty_id) references faculties (faculty_id),
course_id int not null,
constraint fk_fc_courses foreign key (course_id) references courses (course_id)
);

create table institute_course_batch_timing_faculties
(
institute_course_batch_timing_faculty_id int  not null auto_increment primary key,

institute_course_batch_timing_id int not null,
constraint fk_icbtf_icbt foreign key (institute_course_batch_timing_id) references institute_course_batch_timings (institute_course_batch_timing_id),
faculty_id int not null,
constraint fk_icbtff_faculties foreign key (faculty_id) references faculties (faculty_id)
);


create table institute_course_syllabus_topics
(
institute_course_syllabus_topic_id int  not null auto_increment primary key,
institute_course_id int not null,
constraint fk_icst_ic foreign key (institute_course_id) references institute_courses (institute_course_id),
topic_id int not null,
constraint icst_topics foreign key (topic_id) references topics (topic_id)
);

insert into categories (category) values ('MPPSC'),('GATE'),('GMAT'),('GRE'),('IIT JEE'),('Programming');
